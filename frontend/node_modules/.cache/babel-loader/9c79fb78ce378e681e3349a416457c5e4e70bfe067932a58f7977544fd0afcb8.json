{"ast":null,"code":"var _jsxFileName = \"/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js\",\n  _s = $RefreshSig$();\n// src/context/AppContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n    type: \"\",\n    category_ids: [],\n    date: \"\"\n  });\n\n  // üîÅ Synchronise automatiquement le token avec le localStorage\n  useEffect(() => {\n    if (token) localStorage.setItem(\"token\", token);else localStorage.removeItem(\"token\");\n  }, [token]);\n\n  // üîπ Charger les transactions (avec token)\n  useEffect(() => {\n    if (!token) return;\n    fetch(\"http://localhost:5000/transactions/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const sanitized = (data.transactions || []).map(t => ({\n        ...t,\n        categories: Array.isArray(t.categories) ? t.categories : []\n      }));\n      setTransactions(sanitized);\n    }).catch(err => console.error(\"Erreur lors du chargement des transactions :\", err));\n  }, [token]);\n\n  // üîπ Charger les cat√©gories\n  useEffect(() => {\n    fetch(\"http://localhost:5000/categories/\").then(res => {\n      if (!res.ok) throw new Error(\"Erreur lors du chargement des cat√©gories\");\n      return res.json();\n    }).then(data => {\n      setCategories(data.categories || data);\n    }).catch(err => {\n      console.error(\"Erreur lors du chargement :\", err);\n      setErrorMessage(\"Impossible de charger les cat√©gories.\");\n    });\n  }, []);\n\n  // üîπ Ajouter une transaction\n  const addTransaction = async e => {\n    e.preventDefault();\n    if (!token) return console.error(\"Token manquant\");\n    const payload = {\n      amount: parseFloat(newTransaction.amount),\n      type: newTransaction.type,\n      description: newTransaction.description,\n      date: newTransaction.date || null,\n      category_ids: newTransaction.category_ids\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/transactions/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const t = {\n          ...data.transaction,\n          categories: Array.isArray(data.transaction.categories) ? data.transaction.categories : []\n        };\n        setTransactions(prev => [...prev, t]);\n        setNewTransaction({\n          description: \"\",\n          amount: \"\",\n          type: \"\",\n          category_ids: [],\n          date: \"\"\n        });\n      } else {\n        console.error(\"Erreur serveur :\", data.message);\n      }\n    } catch (err) {\n      console.error(\"Erreur fetch :\", err);\n    }\n  };\n\n  // üîπ Supprimer une transaction\n  const deleteTransaction = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/transactions/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTransactions(transactions.filter(t => t.id !== id));\n      setSuccessMessage(\"Transaction supprim√©e !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      token,\n      setToken,\n      // üëà important pour le Login\n      transactions,\n      setTransactions,\n      categories,\n      budget,\n      errorMessage,\n      successMessage,\n      setErrorMessage,\n      setSuccessMessage,\n      addTransaction,\n      deleteTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"V+JgzHP8wbuvztim3/E1YVR8ips=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","token","setToken","localStorage","getItem","transactions","setTransactions","categories","setCategories","budget","setBudget","errorMessage","setErrorMessage","successMessage","setSuccessMessage","newTransaction","setNewTransaction","description","amount","type","category_ids","date","setItem","removeItem","fetch","method","headers","then","res","json","data","sanitized","map","t","Array","isArray","catch","err","console","error","ok","Error","addTransaction","e","preventDefault","payload","parseFloat","response","body","JSON","stringify","transaction","prev","message","deleteTransaction","id","delete","Authorization","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js"],"sourcesContent":["// src/context/AppContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n    type: \"\",\n    category_ids: [],\n    date: \"\",\n  });\n\n  // üîÅ Synchronise automatiquement le token avec le localStorage\n  useEffect(() => {\n    if (token) localStorage.setItem(\"token\", token);\n    else localStorage.removeItem(\"token\");\n  }, [token]);\n\n  // üîπ Charger les transactions (avec token)\n  useEffect(() => {\n    if (!token) return;\n\n    fetch(\"http://localhost:5000/transactions/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const sanitized = (data.transactions || []).map((t) => ({\n          ...t,\n          categories: Array.isArray(t.categories) ? t.categories : [],\n        }));\n        setTransactions(sanitized);\n      })\n      .catch((err) =>\n        console.error(\"Erreur lors du chargement des transactions :\", err)\n      );\n  }, [token]);\n\n  // üîπ Charger les cat√©gories\n  useEffect(() => {\n    fetch(\"http://localhost:5000/categories/\")\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Erreur lors du chargement des cat√©gories\");\n        return res.json();\n      })\n      .then((data) => {\n        setCategories(data.categories || data);\n      })\n      .catch((err) => {\n        console.error(\"Erreur lors du chargement :\", err);\n        setErrorMessage(\"Impossible de charger les cat√©gories.\");\n      });\n  }, []);\n\n  // üîπ Ajouter une transaction\n  const addTransaction = async (e) => {\n    e.preventDefault();\n    if (!token) return console.error(\"Token manquant\");\n\n    const payload = {\n      amount: parseFloat(newTransaction.amount),\n      type: newTransaction.type,\n      description: newTransaction.description,\n      date: newTransaction.date || null,\n      category_ids: newTransaction.category_ids,\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:5000/transactions/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify(payload),\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        const t = {\n          ...data.transaction,\n          categories: Array.isArray(data.transaction.categories)\n            ? data.transaction.categories\n            : [],\n        };\n        setTransactions((prev) => [...prev, t]);\n        setNewTransaction({\n          description: \"\",\n          amount: \"\",\n          type: \"\",\n          category_ids: [],\n          date: \"\",\n        });\n      } else {\n        console.error(\"Erreur serveur :\", data.message);\n      }\n    } catch (err) {\n      console.error(\"Erreur fetch :\", err);\n    }\n  };\n\n  // üîπ Supprimer une transaction\n  const deleteTransaction = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/transactions/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setTransactions(transactions.filter((t) => t.id !== id));\n      setSuccessMessage(\"Transaction supprim√©e !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        token,\n        setToken, // üëà important pour le Login\n        transactions,\n        setTransactions,\n        categories,\n        budget,\n        errorMessage,\n        successMessage,\n        setErrorMessage,\n        setSuccessMessage,\n        addTransaction,\n        deleteTransaction,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}