{"ast":null,"code":"var _jsxFileName = \"/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js\",\n  _s = $RefreshSig$();\n// src/context/AppContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [token, setToken] = useState(null); // ✅ état pour le token\n  const [isReady, setIsReady] = useState(false); // ✅ indique que le contexte est initialisé\n\n  const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n    type: \"\",\n    category_ids: [],\n    date: \"\"\n  });\n\n  // ✅ Charger le token depuis localStorage au démarrage\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n    }\n    setIsReady(true);\n  }, []);\n\n  // ✅ Charger les transactions quand le token est prêt\n  useEffect(() => {\n    if (!token) return;\n    const fetchTransactions = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/transactions/\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const sanitized = (res.data.transactions || []).map(t => ({\n          ...t,\n          categories: Array.isArray(t.categories) ? t.categories : []\n        }));\n        setTransactions(sanitized);\n      } catch (err) {\n        console.error(\"Erreur chargement transactions :\", err);\n        setErrorMessage(\"Impossible de charger les transactions (token invalide ?)\");\n      }\n    };\n    fetchTransactions();\n  }, [token]);\n\n  // ✅ Charger les catégories (pas besoin du token ici)\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/categories/\");\n        setCategories(res.data.categories || res.data);\n      } catch (err) {\n        console.error(\"Erreur chargement catégories :\", err);\n        setErrorMessage(\"Impossible de charger les catégories.\");\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // ✅ Ajouter une transaction\n  const addTransaction = async e => {\n    e.preventDefault();\n    if (!token) {\n      setErrorMessage(\"Token manquant. Veuillez vous reconnecter.\");\n      return;\n    }\n    const payload = {\n      amount: parseFloat(newTransaction.amount),\n      type: newTransaction.type,\n      description: newTransaction.description,\n      date: newTransaction.date || null,\n      category_ids: newTransaction.category_ids\n    };\n    try {\n      const response = await axios.post(\"http://localhost:5000/transactions/\", payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const t = {\n        ...response.data.transaction,\n        categories: Array.isArray(response.data.transaction.categories) ? response.data.transaction.categories : []\n      };\n      setTransactions(prev => [...prev, t]);\n      setNewTransaction({\n        description: \"\",\n        amount: \"\",\n        type: \"\",\n        category_ids: [],\n        date: \"\"\n      });\n    } catch (err) {\n      console.error(\"Erreur ajout transaction :\", err);\n      setErrorMessage(\"Impossible d’ajouter la transaction.\");\n    }\n  };\n\n  // ✅ Supprimer une transaction\n  const deleteTransaction = async id => {\n    if (!token) return;\n    try {\n      await axios.delete(`http://localhost:5000/transactions/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTransactions(prev => prev.filter(t => t.id !== id));\n    } catch (err) {\n      console.error(\"Erreur suppression transaction :\", err);\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n    }\n  };\n\n  // ✅ Charger le budget\n  const fetchBudget = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/budget/\");\n      setBudget(res.data.totalBudget);\n    } catch (err) {\n      console.error(\"Erreur chargement budget :\", err);\n      setErrorMessage(\"Impossible de charger le budget.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      token,\n      setToken,\n      isReady,\n      transactions,\n      setTransactions,\n      categories,\n      setCategories,\n      budget,\n      errorMessage,\n      successMessage,\n      setErrorMessage,\n      setSuccessMessage,\n      addTransaction,\n      deleteTransaction,\n      fetchBudget\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"xjyWoUbx1MZx7FRL/Amd7+K5K9A=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","transactions","setTransactions","categories","setCategories","budget","setBudget","errorMessage","setErrorMessage","successMessage","setSuccessMessage","token","setToken","isReady","setIsReady","newTransaction","setNewTransaction","description","amount","type","category_ids","date","storedToken","localStorage","getItem","fetchTransactions","res","get","headers","Authorization","sanitized","data","map","t","Array","isArray","err","console","error","fetchCategories","addTransaction","e","preventDefault","payload","parseFloat","response","post","transaction","prev","deleteTransaction","id","delete","filter","fetchBudget","totalBudget","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js"],"sourcesContent":["// src/context/AppContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [token, setToken] = useState(null); // ✅ état pour le token\n  const [isReady, setIsReady] = useState(false); // ✅ indique que le contexte est initialisé\n\n  const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n    type: \"\",\n    category_ids: [],\n    date: \"\",\n  });\n\n  // ✅ Charger le token depuis localStorage au démarrage\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n    }\n    setIsReady(true);\n  }, []);\n\n  // ✅ Charger les transactions quand le token est prêt\n  useEffect(() => {\n    if (!token) return;\n\n    const fetchTransactions = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/transactions/\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const sanitized = (res.data.transactions || []).map((t) => ({\n          ...t,\n          categories: Array.isArray(t.categories) ? t.categories : [],\n        }));\n        setTransactions(sanitized);\n      } catch (err) {\n        console.error(\"Erreur chargement transactions :\", err);\n        setErrorMessage(\"Impossible de charger les transactions (token invalide ?)\");\n      }\n    };\n\n    fetchTransactions();\n  }, [token]);\n\n  // ✅ Charger les catégories (pas besoin du token ici)\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/categories/\");\n        setCategories(res.data.categories || res.data);\n      } catch (err) {\n        console.error(\"Erreur chargement catégories :\", err);\n        setErrorMessage(\"Impossible de charger les catégories.\");\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  // ✅ Ajouter une transaction\n  const addTransaction = async (e) => {\n    e.preventDefault();\n    if (!token) {\n      setErrorMessage(\"Token manquant. Veuillez vous reconnecter.\");\n      return;\n    }\n\n    const payload = {\n      amount: parseFloat(newTransaction.amount),\n      type: newTransaction.type,\n      description: newTransaction.description,\n      date: newTransaction.date || null,\n      category_ids: newTransaction.category_ids,\n    };\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:5000/transactions/\",\n        payload,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const t = {\n        ...response.data.transaction,\n        categories: Array.isArray(response.data.transaction.categories)\n          ? response.data.transaction.categories\n          : [],\n      };\n\n      setTransactions((prev) => [...prev, t]);\n      setNewTransaction({\n        description: \"\",\n        amount: \"\",\n        type: \"\",\n        category_ids: [],\n        date: \"\",\n      });\n    } catch (err) {\n      console.error(\"Erreur ajout transaction :\", err);\n      setErrorMessage(\"Impossible d’ajouter la transaction.\");\n    }\n  };\n\n  // ✅ Supprimer une transaction\n  const deleteTransaction = async (id) => {\n    if (!token) return;\n\n    try {\n      await axios.delete(`http://localhost:5000/transactions/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setTransactions((prev) => prev.filter((t) => t.id !== id));\n    } catch (err) {\n      console.error(\"Erreur suppression transaction :\", err);\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n    }\n  };\n\n  // ✅ Charger le budget\n  const fetchBudget = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/budget/\");\n      setBudget(res.data.totalBudget);\n    } catch (err) {\n      console.error(\"Erreur chargement budget :\", err);\n      setErrorMessage(\"Impossible de charger le budget.\");\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        token,\n        setToken,\n        isReady,\n        transactions,\n        setTransactions,\n        categories,\n        setCategories,\n        budget,\n        errorMessage,\n        successMessage,\n        setErrorMessage,\n        setSuccessMessage,\n        addTransaction,\n        deleteTransaction,\n        fetchBudget,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}