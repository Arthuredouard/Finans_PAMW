{"ast":null,"code":"var _jsxFileName = \"/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js\",\n  _s = $RefreshSig$();\n// src/context/AppContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Charger les données au démarrage\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const transRes = await axios.get(\"http://127.0.0.1:5000/transactions\");\n      const catRes = await axios.get(\"http://127.0.0.1:5000/categories\");\n      const budgetRes = await axios.get(\"http://127.0.0.1:5000/budget\");\n      setTransactions(transRes.data);\n      setCategories(catRes.data);\n      setBudget(budgetRes.data.totalBudget);\n    } catch (error) {\n      setErrorMessage(\"Erreur lors du chargement des données.\");\n      console.error(error);\n    }\n  };\n\n  // Ajouter une transaction\n  const addTransaction = async transaction => {\n    if (!transaction.amount || transaction.amount <= 0) {\n      setErrorMessage(\"Montant invalide.\");\n      return;\n    }\n    try {\n      const res = await axios.post(\"/api/transactions\", transaction);\n      setTransactions([...transactions, res.data]);\n      setSuccessMessage(\"Transaction ajoutée !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible d'ajouter la transaction.\");\n      console.error(error);\n    }\n  };\n\n  // Supprimer une transaction\n  const deleteTransaction = async id => {\n    try {\n      await axios.delete(`/api/transactions/${id}`);\n      setTransactions(transactions.filter(t => t.id !== id));\n      setSuccessMessage(\"Transaction supprimée !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      transactions,\n      categories,\n      budget,\n      errorMessage,\n      successMessage,\n      setErrorMessage,\n      setSuccessMessage,\n      addTransaction,\n      deleteTransaction,\n      fetchData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"rL+WN2mb2rEWtYi9gS6uD49jo54=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","transactions","setTransactions","categories","setCategories","budget","setBudget","errorMessage","setErrorMessage","successMessage","setSuccessMessage","fetchData","transRes","get","catRes","budgetRes","data","totalBudget","error","console","addTransaction","transaction","amount","res","post","deleteTransaction","id","delete","filter","t","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js"],"sourcesContent":["// src/context/AppContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Charger les données au démarrage\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  \n  \n  const fetchData = async () => {\n    try {\n      const transRes = await axios.get(\"http://127.0.0.1:5000/transactions\");\n      const catRes = await axios.get(\"http://127.0.0.1:5000/categories\");\n      const budgetRes = await axios.get(\"http://127.0.0.1:5000/budget\");\n\n      setTransactions(transRes.data);\n      setCategories(catRes.data);\n      setBudget(budgetRes.data.totalBudget);\n    } catch (error) {\n      setErrorMessage(\"Erreur lors du chargement des données.\");\n      console.error(error);\n    }\n  };\n\n  // Ajouter une transaction\n  const addTransaction = async (transaction) => {\n    if (!transaction.amount || transaction.amount <= 0) {\n      setErrorMessage(\"Montant invalide.\");\n      return;\n    }\n\n    try {\n      const res = await axios.post(\"/api/transactions\", transaction);\n      setTransactions([...transactions, res.data]);\n      setSuccessMessage(\"Transaction ajoutée !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible d'ajouter la transaction.\");\n      console.error(error);\n    }\n  };\n\n  // Supprimer une transaction\n  const deleteTransaction = async (id) => {\n    try {\n      await axios.delete(`/api/transactions/${id}`);\n      setTransactions(transactions.filter((t) => t.id !== id));\n      setSuccessMessage(\"Transaction supprimée !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        transactions,\n        categories,\n        budget,\n        errorMessage,\n        successMessage,\n        setErrorMessage,\n        setSuccessMessage,\n        addTransaction,\n        deleteTransaction,\n        fetchData,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACdkB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,oCAAoC,CAAC;MACtE,MAAMC,MAAM,GAAG,MAAMpB,KAAK,CAACmB,GAAG,CAAC,kCAAkC,CAAC;MAClE,MAAME,SAAS,GAAG,MAAMrB,KAAK,CAACmB,GAAG,CAAC,8BAA8B,CAAC;MAEjEX,eAAe,CAACU,QAAQ,CAACI,IAAI,CAAC;MAC9BZ,aAAa,CAACU,MAAM,CAACE,IAAI,CAAC;MAC1BV,SAAS,CAACS,SAAS,CAACC,IAAI,CAACC,WAAW,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,eAAe,CAAC,wCAAwC,CAAC;MACzDW,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAME,cAAc,GAAG,MAAOC,WAAW,IAAK;IAC5C,IAAI,CAACA,WAAW,CAACC,MAAM,IAAID,WAAW,CAACC,MAAM,IAAI,CAAC,EAAE;MAClDd,eAAe,CAAC,mBAAmB,CAAC;MACpC;IACF;IAEA,IAAI;MACF,MAAMe,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,IAAI,CAAC,mBAAmB,EAAEH,WAAW,CAAC;MAC9DnB,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEsB,GAAG,CAACP,IAAI,CAAC,CAAC;MAC5CN,iBAAiB,CAAC,uBAAuB,CAAC;IAC5C,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdV,eAAe,CAAC,sCAAsC,CAAC;MACvDW,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMO,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACtC,IAAI;MACF,MAAMhC,KAAK,CAACiC,MAAM,CAAC,qBAAqBD,EAAE,EAAE,CAAC;MAC7CxB,eAAe,CAACD,YAAY,CAAC2B,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;MACxDhB,iBAAiB,CAAC,yBAAyB,CAAC;IAC9C,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdV,eAAe,CAAC,yCAAyC,CAAC;MAC1DW,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,UAAU,CAACiC,QAAQ;IAClBC,KAAK,EAAE;MACL9B,YAAY;MACZE,UAAU;MACVE,MAAM;MACNE,YAAY;MACZE,cAAc;MACdD,eAAe;MACfE,iBAAiB;MACjBU,cAAc;MACdK,iBAAiB;MACjBd;IACF,CAAE;IAAAZ,QAAA,EAEDA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACnC,EAAA,CA5EWF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}