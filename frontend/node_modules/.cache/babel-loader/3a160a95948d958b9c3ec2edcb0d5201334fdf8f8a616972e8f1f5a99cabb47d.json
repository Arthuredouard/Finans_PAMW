{"ast":null,"code":"var _jsxFileName = \"/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\"));\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n    type: \"\",\n    category_ids: [],\n    date: \"\"\n  });\n\n  // 🔁 Synchroniser automatiquement le token avec le localStorage\n  useEffect(() => {\n    if (token) localStorage.setItem(\"token\", token);else localStorage.removeItem(\"token\");\n  }, [token]);\n\n  // ✅ Charger les transactions dès que le token est prêt\n  useEffect(() => {\n    if (!token) {\n      console.warn(\"Aucun token trouvé, transactions non chargées.\");\n      return;\n    }\n    fetch(\"http://localhost:5000/transactions/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Erreur d'autorisation ou serveur.\");\n      return res.json();\n    }).then(data => {\n      const sanitized = (data.transactions || []).map(t => ({\n        ...t,\n        categories: Array.isArray(t.categories) ? t.categories : []\n      }));\n      setTransactions(sanitized);\n    }).catch(err => console.error(\"Erreur lors du chargement des transactions :\", err));\n  }, [token]);\n\n  // ✅ Charger les catégories (ne dépend pas du token)\n  useEffect(() => {\n    fetch(\"http://localhost:5000/categories/\").then(res => {\n      if (!res.ok) throw new Error(\"Erreur lors du chargement des catégories\");\n      return res.json();\n    }).then(data => {\n      setCategories(data.categories || data);\n    }).catch(err => {\n      console.error(\"Erreur lors du chargement des catégories :\", err);\n      setErrorMessage(\"Impossible de charger les catégories.\");\n    });\n  }, []);\n\n  // ✅ Ajouter une transaction\n  const addTransaction = async e => {\n    e.preventDefault();\n    if (!token) {\n      setErrorMessage(\"Non autorisé. Veuillez vous reconnecter.\");\n      return;\n    }\n    const payload = {\n      amount: parseFloat(newTransaction.amount),\n      type: newTransaction.type,\n      description: newTransaction.description,\n      date: newTransaction.date || null,\n      category_ids: newTransaction.category_ids\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/transactions/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const t = {\n          ...data.transaction,\n          categories: Array.isArray(data.transaction.categories) ? data.transaction.categories : []\n        };\n        setTransactions(prev => [...prev, t]);\n        setNewTransaction({\n          description: \"\",\n          amount: \"\",\n          type: \"\",\n          category_ids: [],\n          date: \"\"\n        });\n      } else {\n        console.error(\"Erreur serveur :\", data.message);\n      }\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout de la transaction :\", err);\n    }\n  };\n\n  // ✅ Supprimer une transaction\n  const deleteTransaction = async id => {\n    if (!token) return console.error(\"Token manquant pour suppression.\");\n    try {\n      await axios.delete(`http://localhost:5000/transactions/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTransactions(prev => prev.filter(t => t.id !== id));\n      setSuccessMessage(\"Transaction supprimée !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      token,\n      setToken,\n      // ✅ pour Login et Logout\n      transactions,\n      setTransactions,\n      categories,\n      budget,\n      errorMessage,\n      successMessage,\n      setErrorMessage,\n      setSuccessMessage,\n      addTransaction,\n      deleteTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"IFxY5smHDGSkgPgG/N2Ndy84I0s=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","token","setToken","localStorage","getItem","transactions","setTransactions","categories","setCategories","budget","setBudget","errorMessage","setErrorMessage","successMessage","setSuccessMessage","newTransaction","setNewTransaction","description","amount","type","category_ids","date","setItem","removeItem","console","warn","fetch","method","headers","then","res","ok","Error","json","data","sanitized","map","t","Array","isArray","catch","err","error","addTransaction","e","preventDefault","payload","parseFloat","response","body","JSON","stringify","transaction","prev","message","deleteTransaction","id","delete","Authorization","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\"));\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n    type: \"\",\n    category_ids: [],\n    date: \"\",\n  });\n\n  // 🔁 Synchroniser automatiquement le token avec le localStorage\n  useEffect(() => {\n    if (token) localStorage.setItem(\"token\", token);\n    else localStorage.removeItem(\"token\");\n  }, [token]);\n\n  // ✅ Charger les transactions dès que le token est prêt\n  useEffect(() => {\n    if (!token) {\n      console.warn(\"Aucun token trouvé, transactions non chargées.\");\n      return;\n    }\n\n    fetch(\"http://localhost:5000/transactions/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n      },\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Erreur d'autorisation ou serveur.\");\n        return res.json();\n      })\n      .then((data) => {\n        const sanitized = (data.transactions || []).map((t) => ({\n          ...t,\n          categories: Array.isArray(t.categories) ? t.categories : [],\n        }));\n        setTransactions(sanitized);\n      })\n      .catch((err) =>\n        console.error(\"Erreur lors du chargement des transactions :\", err)\n      );\n  }, [token]);\n\n  // ✅ Charger les catégories (ne dépend pas du token)\n  useEffect(() => {\n    fetch(\"http://localhost:5000/categories/\")\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Erreur lors du chargement des catégories\");\n        return res.json();\n      })\n      .then((data) => {\n        setCategories(data.categories || data);\n      })\n      .catch((err) => {\n        console.error(\"Erreur lors du chargement des catégories :\", err);\n        setErrorMessage(\"Impossible de charger les catégories.\");\n      });\n  }, []);\n\n  // ✅ Ajouter une transaction\n  const addTransaction = async (e) => {\n    e.preventDefault();\n    if (!token) {\n      setErrorMessage(\"Non autorisé. Veuillez vous reconnecter.\");\n      return;\n    }\n\n    const payload = {\n      amount: parseFloat(newTransaction.amount),\n      type: newTransaction.type,\n      description: newTransaction.description,\n      date: newTransaction.date || null,\n      category_ids: newTransaction.category_ids,\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:5000/transactions/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        const t = {\n          ...data.transaction,\n          categories: Array.isArray(data.transaction.categories)\n            ? data.transaction.categories\n            : [],\n        };\n        setTransactions((prev) => [...prev, t]);\n        setNewTransaction({\n          description: \"\",\n          amount: \"\",\n          type: \"\",\n          category_ids: [],\n          date: \"\",\n        });\n      } else {\n        console.error(\"Erreur serveur :\", data.message);\n      }\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout de la transaction :\", err);\n    }\n  };\n\n  // ✅ Supprimer une transaction\n  const deleteTransaction = async (id) => {\n    if (!token) return console.error(\"Token manquant pour suppression.\");\n\n    try {\n      await axios.delete(`http://localhost:5000/transactions/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setTransactions((prev) => prev.filter((t) => t.id !== id));\n      setSuccessMessage(\"Transaction supprimée !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        token,\n        setToken, // ✅ pour Login et Logout\n        transactions,\n        setTransactions,\n        categories,\n        budget,\n        errorMessage,\n        successMessage,\n        setErrorMessage,\n        setSuccessMessage,\n        addTransaction,\n        deleteTransaction,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,MAAMW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC;IACnDyB,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,EAAE;IAChBC,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;EACA5B,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,EAAEE,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAErB,KAAK,CAAC,CAAC,KAC3CE,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;EACvC,CAAC,EAAE,CAACtB,KAAK,CAAC,CAAC;;EAEX;EACAR,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,KAAK,EAAE;MACVuB,OAAO,CAACC,IAAI,CAAC,gDAAgD,CAAC;MAC9D;IACF;IAEAC,KAAK,CAAC,qCAAqC,EAAE;MAC3CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAU3B,KAAK;MAClC;IACF,CAAC,CAAC,CACC4B,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;MACjE,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd,MAAMC,SAAS,GAAG,CAACD,IAAI,CAAC7B,YAAY,IAAI,EAAE,EAAE+B,GAAG,CAAEC,CAAC,KAAM;QACtD,GAAGA,CAAC;QACJ9B,UAAU,EAAE+B,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC9B,UAAU,CAAC,GAAG8B,CAAC,CAAC9B,UAAU,GAAG;MAC3D,CAAC,CAAC,CAAC;MACHD,eAAe,CAAC6B,SAAS,CAAC;IAC5B,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IACTjB,OAAO,CAACkB,KAAK,CAAC,8CAA8C,EAAED,GAAG,CACnE,CAAC;EACL,CAAC,EAAE,CAACxC,KAAK,CAAC,CAAC;;EAEX;EACAR,SAAS,CAAC,MAAM;IACdiC,KAAK,CAAC,mCAAmC,CAAC,CACvCG,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;MACxE,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd1B,aAAa,CAAC0B,IAAI,CAAC3B,UAAU,IAAI2B,IAAI,CAAC;IACxC,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdjB,OAAO,CAACkB,KAAK,CAAC,4CAA4C,EAAED,GAAG,CAAC;MAChE7B,eAAe,CAAC,uCAAuC,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM+B,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC5C,KAAK,EAAE;MACVW,eAAe,CAAC,0CAA0C,CAAC;MAC3D;IACF;IAEA,MAAMkC,OAAO,GAAG;MACd5B,MAAM,EAAE6B,UAAU,CAAChC,cAAc,CAACG,MAAM,CAAC;MACzCC,IAAI,EAAEJ,cAAc,CAACI,IAAI;MACzBF,WAAW,EAAEF,cAAc,CAACE,WAAW;MACvCI,IAAI,EAAEN,cAAc,CAACM,IAAI,IAAI,IAAI;MACjCD,YAAY,EAAEL,cAAc,CAACK;IAC/B,CAAC;IAED,IAAI;MACF,MAAM4B,QAAQ,GAAG,MAAMtB,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAU3B,KAAK;QAClC,CAAC;QACDgD,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;MAC9B,CAAC,CAAC;MAEF,MAAMZ,IAAI,GAAG,MAAMc,QAAQ,CAACf,IAAI,CAAC,CAAC;MAElC,IAAIe,QAAQ,CAACjB,EAAE,EAAE;QACf,MAAMM,CAAC,GAAG;UACR,GAAGH,IAAI,CAACkB,WAAW;UACnB7C,UAAU,EAAE+B,KAAK,CAACC,OAAO,CAACL,IAAI,CAACkB,WAAW,CAAC7C,UAAU,CAAC,GAClD2B,IAAI,CAACkB,WAAW,CAAC7C,UAAU,GAC3B;QACN,CAAC;QACDD,eAAe,CAAE+C,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEhB,CAAC,CAAC,CAAC;QACvCrB,iBAAiB,CAAC;UAChBC,WAAW,EAAE,EAAE;UACfC,MAAM,EAAE,EAAE;UACVC,IAAI,EAAE,EAAE;UACRC,YAAY,EAAE,EAAE;UAChBC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,CAAC,MAAM;QACLG,OAAO,CAACkB,KAAK,CAAC,kBAAkB,EAAER,IAAI,CAACoB,OAAO,CAAC;MACjD;IACF,CAAC,CAAC,OAAOb,GAAG,EAAE;MACZjB,OAAO,CAACkB,KAAK,CAAC,4CAA4C,EAAED,GAAG,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMc,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACtC,IAAI,CAACvD,KAAK,EAAE,OAAOuB,OAAO,CAACkB,KAAK,CAAC,kCAAkC,CAAC;IAEpE,IAAI;MACF,MAAMhD,KAAK,CAAC+D,MAAM,CAAC,sCAAsCD,EAAE,EAAE,EAAE;QAC7D5B,OAAO,EAAE;UAAE8B,aAAa,EAAE,UAAUzD,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFK,eAAe,CAAE+C,IAAI,IAAKA,IAAI,CAACM,MAAM,CAAEtB,CAAC,IAAKA,CAAC,CAACmB,EAAE,KAAKA,EAAE,CAAC,CAAC;MAC1D1C,iBAAiB,CAAC,yBAAyB,CAAC;IAC9C,CAAC,CAAC,OAAO4B,KAAK,EAAE;MACd9B,eAAe,CAAC,yCAAyC,CAAC;MAC1DY,OAAO,CAACkB,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE9C,OAAA,CAACC,UAAU,CAAC+D,QAAQ;IAClBC,KAAK,EAAE;MACL5D,KAAK;MACLC,QAAQ;MAAE;MACVG,YAAY;MACZC,eAAe;MACfC,UAAU;MACVE,MAAM;MACNE,YAAY;MACZE,cAAc;MACdD,eAAe;MACfE,iBAAiB;MACjB6B,cAAc;MACdY;IACF,CAAE;IAAAxD,QAAA,EAEDA;EAAQ;IAAA+D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACjE,EAAA,CA1JWF,WAAW;AAAAoE,EAAA,GAAXpE,WAAW;AAAA,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}