{"ast":null,"code":"var _jsxFileName = \"/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js\",\n  _s = $RefreshSig$();\n// src/context/AppContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n    type: \"\",\n    category_ids: [],\n    date: \"\"\n  });\n\n  // Charger les données au démarrage\n\n  // Charger les transactions\n  useEffect(() => {\n    fetch(\"http://localhost:5000/transactions/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const sanitized = (data.transactions || []).map(t => ({\n        ...t,\n        categories: Array.isArray(t.categories) ? t.categories : []\n      }));\n      setTransactions(sanitized);\n    }).catch(err => console.error(\"Erreur lors du chargement des transactions :\", err));\n  }, [token]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/categories/\").then(res => {\n      if (!res.ok) throw new Error(\"Erreur lors du chargement des catégories\");\n      return res.json();\n    }).then(data => {\n      // Le backend peut renvoyer {\"categories\": [...]} ou un tableau direct\n      setCategories(data.categories || data);\n      console.log(\"Catégories chargées :\", data);\n    }).catch(err => {\n      console.error(\"Erreur lors du chargement :\", err);\n      setErrorMessage(\"Impossible de charger les catégories.\");\n    });\n  }, []);\n  const fetchData = async () => {\n    try {\n      //const transRes = await axios.get(\"http://127.0.0.1:5000/transactions\", {\n      //headers: {\n      //Authorization: `Bearer ${token}`,\n      //}, });\n      //const catRes = await axios.get(\"http://127.0.0.1:5000/categories\");\n      const budgetRes = await axios.get(\"http://127.0.0.1:5000/budget\");\n\n      //setTransactions(transRes.data);\n      //setCategories(catRes.data);\n      setBudget(budgetRes.data.totalBudget);\n    } catch (error) {\n      setErrorMessage(\"Erreur lors du chargement des données.\");\n      console.error(error);\n    }\n  };\n  const addTransaction = async e => {\n    e.preventDefault();\n    const payload = {\n      amount: parseFloat(newTransaction.amount),\n      type: newTransaction.type,\n      description: newTransaction.description,\n      date: newTransaction.date || null,\n      category_ids: newTransaction.category_ids\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/transactions/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const t = {\n          ...data.transaction,\n          categories: Array.isArray(data.transaction.categories) ? data.transaction.categories : []\n        };\n        setTransactions(prev => [...prev, t]);\n        setNewTransaction({\n          description: \"\",\n          amount: \"\",\n          type: \"\",\n          category_ids: [],\n          date: \"\"\n        });\n      } else {\n        console.error(\"Erreur serveur :\", data.message);\n      }\n    } catch (err) {\n      console.error(\"Erreur fetch :\", err);\n    }\n  };\n\n  // Supprimer une transaction\n  const deleteTransaction = async id => {\n    try {\n      await axios.delete(`/api/transactions/${id}`);\n      setTransactions(transactions.filter(t => t.id !== id));\n      setSuccessMessage(\"Transaction supprimée !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      transactions,\n      categories,\n      budget,\n      errorMessage,\n      successMessage,\n      setErrorMessage,\n      setSuccessMessage,\n      addTransaction,\n      deleteTransaction,\n      fetchData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"syi+dvntlGKzMC2DXQvUOwDUc5g=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","transactions","setTransactions","categories","setCategories","budget","setBudget","errorMessage","setErrorMessage","successMessage","setSuccessMessage","newTransaction","setNewTransaction","description","amount","type","category_ids","date","fetch","method","headers","token","then","res","json","data","sanitized","map","t","Array","isArray","catch","err","console","error","ok","Error","log","fetchData","budgetRes","get","totalBudget","addTransaction","e","preventDefault","payload","parseFloat","response","body","JSON","stringify","transaction","prev","message","deleteTransaction","id","delete","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/Charging/_final_test/Finans_PAMW/frontend/src/context/AppContext.js"],"sourcesContent":["// src/context/AppContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n    const [newTransaction, setNewTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n    type: \"\",\n    category_ids: [],\n    date: \"\",\n  });\n\n\n  \n  // Charger les données au démarrage\n      \n\n  // Charger les transactions\n  useEffect(() => {\n    fetch(\"http://localhost:5000/transactions/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const sanitized = (data.transactions || []).map((t) => ({\n          ...t,\n          categories: Array.isArray(t.categories) ? t.categories : [],\n        }));\n        setTransactions(sanitized);\n      })\n      .catch((err) => console.error(\"Erreur lors du chargement des transactions :\", err));\n  }, [token]);\n \n    useEffect(() => {\n    fetch(\"http://localhost:5000/categories/\")\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Erreur lors du chargement des catégories\");\n        return res.json();\n      })\n      .then((data) => {\n        // Le backend peut renvoyer {\"categories\": [...]} ou un tableau direct\n        setCategories(data.categories || data);\n        console.log(\"Catégories chargées :\", data);\n      })\n      .catch((err) => {\n        console.error(\"Erreur lors du chargement :\", err);\n        setErrorMessage(\"Impossible de charger les catégories.\");\n      });\n  }, []);\n\n\n  \n  \n  const fetchData = async () => {\n    try {\n          //const transRes = await axios.get(\"http://127.0.0.1:5000/transactions\", {\n          //headers: {\n            //Authorization: `Bearer ${token}`,\n          //}, });\n      //const catRes = await axios.get(\"http://127.0.0.1:5000/categories\");\n      const budgetRes = await axios.get(\"http://127.0.0.1:5000/budget\");\n\n      //setTransactions(transRes.data);\n      //setCategories(catRes.data);\n      setBudget(budgetRes.data.totalBudget);\n    } catch (error) {\n      setErrorMessage(\"Erreur lors du chargement des données.\");\n      console.error(error);\n    }\n  };\n\n\n  const addTransaction = async (e) => {\n    e.preventDefault();\n    const payload = {\n      amount: parseFloat(newTransaction.amount),\n      type: newTransaction.type,\n      description: newTransaction.description,\n      date: newTransaction.date || null,\n      category_ids: newTransaction.category_ids,\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:5000/transactions/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify(payload),\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        const t = {\n          ...data.transaction,\n          categories: Array.isArray(data.transaction.categories) ? data.transaction.categories : [],\n        };\n        setTransactions((prev) => [...prev, t]);\n        setNewTransaction({\n          description: \"\",\n          amount: \"\",\n          type: \"\",\n          category_ids: [],\n          date: \"\",\n        });\n      } else {\n        console.error(\"Erreur serveur :\", data.message);\n      }\n    } catch (err) {\n      console.error(\"Erreur fetch :\", err);\n    }\n  };\n\n  // Supprimer une transaction\n  const deleteTransaction = async (id) => {\n    try {\n      await axios.delete(`/api/transactions/${id}`);\n      setTransactions(transactions.filter((t) => t.id !== id));\n      setSuccessMessage(\"Transaction supprimée !\");\n    } catch (error) {\n      setErrorMessage(\"Impossible de supprimer la transaction.\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        transactions,\n        categories,\n        budget,\n        errorMessage,\n        successMessage,\n        setErrorMessage,\n        setSuccessMessage,\n        addTransaction,\n        deleteTransaction,\n        fetchData,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC;IACrDqB,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,EAAE;IAChBC,IAAI,EAAE;EACR,CAAC,CAAC;;EAIF;;EAGA;EACAxB,SAAS,CAAC,MAAM;IACdyB,KAAK,CAAC,qCAAqC,EAAE;MAC3CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUC,KAAK;MAClC;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,SAAS,GAAG,CAACD,IAAI,CAACxB,YAAY,IAAI,EAAE,EAAE0B,GAAG,CAAEC,CAAC,KAAM;QACtD,GAAGA,CAAC;QACJzB,UAAU,EAAE0B,KAAK,CAACC,OAAO,CAACF,CAAC,CAACzB,UAAU,CAAC,GAAGyB,CAAC,CAACzB,UAAU,GAAG;MAC3D,CAAC,CAAC,CAAC;MACHD,eAAe,CAACwB,SAAS,CAAC;IAC5B,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,8CAA8C,EAAEF,GAAG,CAAC,CAAC;EACvF,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAET5B,SAAS,CAAC,MAAM;IAChByB,KAAK,CAAC,mCAAmC,CAAC,CACvCI,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACY,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;MACxE,OAAOb,GAAG,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd;MACArB,aAAa,CAACqB,IAAI,CAACtB,UAAU,IAAIsB,IAAI,CAAC;MACtCQ,OAAO,CAACI,GAAG,CAAC,uBAAuB,EAAEZ,IAAI,CAAC;IAC5C,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;MACjDxB,eAAe,CAAC,uCAAuC,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAKN,MAAM8B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACE;MACA;MACE;MACF;MACJ;MACA,MAAMC,SAAS,GAAG,MAAM7C,KAAK,CAAC8C,GAAG,CAAC,8BAA8B,CAAC;;MAEjE;MACA;MACAlC,SAAS,CAACiC,SAAS,CAACd,IAAI,CAACgB,WAAW,CAAC;IACvC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACd1B,eAAe,CAAC,wCAAwC,CAAC;MACzDyB,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAGD,MAAMQ,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG;MACd/B,MAAM,EAAEgC,UAAU,CAACnC,cAAc,CAACG,MAAM,CAAC;MACzCC,IAAI,EAAEJ,cAAc,CAACI,IAAI;MACzBF,WAAW,EAAEF,cAAc,CAACE,WAAW;MACvCI,IAAI,EAAEN,cAAc,CAACM,IAAI,IAAI,IAAI;MACjCD,YAAY,EAAEL,cAAc,CAACK;IAC/B,CAAC;IAED,IAAI;MACF,MAAM+B,QAAQ,GAAG,MAAM7B,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUC,KAAK;QAClC,CAAC;QACD2B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;MAC9B,CAAC,CAAC;MACF,MAAMpB,IAAI,GAAG,MAAMsB,QAAQ,CAACvB,IAAI,CAAC,CAAC;MAElC,IAAIuB,QAAQ,CAACZ,EAAE,EAAE;QACf,MAAMP,CAAC,GAAG;UACR,GAAGH,IAAI,CAAC0B,WAAW;UACnBhD,UAAU,EAAE0B,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC0B,WAAW,CAAChD,UAAU,CAAC,GAAGsB,IAAI,CAAC0B,WAAW,CAAChD,UAAU,GAAG;QACzF,CAAC;QACDD,eAAe,CAAEkD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAExB,CAAC,CAAC,CAAC;QACvChB,iBAAiB,CAAC;UAChBC,WAAW,EAAE,EAAE;UACfC,MAAM,EAAE,EAAE;UACVC,IAAI,EAAE,EAAE;UACRC,YAAY,EAAE,EAAE;UAChBC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,CAAC,MAAM;QACLgB,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAET,IAAI,CAAC4B,OAAO,CAAC;MACjD;IACF,CAAC,CAAC,OAAOrB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMsB,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACtC,IAAI;MACF,MAAM7D,KAAK,CAAC8D,MAAM,CAAC,qBAAqBD,EAAE,EAAE,CAAC;MAC7CrD,eAAe,CAACD,YAAY,CAACwD,MAAM,CAAE7B,CAAC,IAAKA,CAAC,CAAC2B,EAAE,KAAKA,EAAE,CAAC,CAAC;MACxD7C,iBAAiB,CAAC,yBAAyB,CAAC;IAC9C,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACd1B,eAAe,CAAC,yCAAyC,CAAC;MAC1DyB,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEtC,OAAA,CAACC,UAAU,CAAC6D,QAAQ;IAClBC,KAAK,EAAE;MACL1D,YAAY;MACZE,UAAU;MACVE,MAAM;MACNE,YAAY;MACZE,cAAc;MACdD,eAAe;MACfE,iBAAiB;MACjBgC,cAAc;MACdY,iBAAiB;MACjBhB;IACF,CAAE;IAAAvC,QAAA,EAEDA;EAAQ;IAAA6D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAAC/D,EAAA,CAtJWF,WAAW;AAAAkE,EAAA,GAAXlE,WAAW;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}